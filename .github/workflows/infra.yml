name: Terraform Infrastructure CI/CD

on:
  pull_request:
    paths:
      - 'terraform/**'
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'

# Add explicit permissions
permissions:
  contents: read
  pull-requests: write
  issues: write

env:
  TF_VERSION: "1.6.6"

jobs:
  terraform-validation:
    runs-on: ubuntu-latest
    name: Terraform Validation
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Format Check
        working-directory: terraform
        run: terraform fmt -check -recursive

      - name: Terraform Init (validation only)
        working-directory: terraform
        run: terraform init -backend=false

      - name: Terraform Validate
        working-directory: terraform
        run: terraform validate

      - name: Terraform Plan (dry-run)
        if: github.event_name == 'pull_request'
        working-directory: terraform
        run: |
          # Create dummy variables for validation
          cat > terraform.tfvars << EOF
          ssh_public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC dummy-key-for-validation"
          allowed_ssh_cidrs = ["0.0.0.0/0"]
          allowed_app_cidrs = ["0.0.0.0/0"]
          allowed_monitoring_cidrs = ["0.0.0.0/0"]
          EOF
          
          # Run plan for validation (will fail on auth but validates syntax)
          terraform plan -out=tf.plan || echo "Plan validation completed (expected to fail without AWS credentials)"

  terraform-security-scan:
    runs-on: ubuntu-latest
    name: Terraform Security Scan
    needs: terraform-validation
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run tfsec security scan
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: terraform
          soft_fail: true  # Don't fail the build on security issues initially

      - name: Comment security scan results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🔍 Terraform security scan completed. Check the logs for any findings.'
            });
