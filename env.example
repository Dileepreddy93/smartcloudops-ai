# SmartCloudOps.AI Environment Configuration Template
# Copy this file to .env and fill in your actual values

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Full database URL (preferred method)
DATABASE_URL=postgresql://username:password@localhost:5432/smartcloudops

# Individual database settings (alternative method)
DB_HOST=localhost
DB_PORT=5432
DB_NAME=smartcloudops
DB_USER=postgres
DB_PASSWORD=your_secure_password
DB_MIN_CONNECTIONS=5
DB_MAX_CONNECTIONS=20

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
# Full Redis URL (preferred method)
REDIS_URL=redis://localhost:6379/0

# Individual Redis settings (alternative method)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
# Server configuration
PORT=5000
HOST=0.0.0.0
ENVIRONMENT=development  # development, staging, production
FLASK_DEBUG=False
FLASK_ENV=production

# Security configuration
SECRET_KEY=your-super-secret-key-here-make-it-long-and-random
API_KEY_SALT=your-api-salt-here-make-it-long-and-random

# =============================================================================
# AWS CONFIGURATION
# =============================================================================
AWS_DEFAULT_REGION=us-east-1
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_SESSION_TOKEN=your-aws-session-token  # Optional, for temporary credentials

# S3 Configuration
S3_BUCKET=smartcloudops-ai-ml-models
S3_ML_MODELS_BUCKET=smartcloudops-ai-ml-models
ML_MODELS_BUCKET=smartcloudops-ai-ml-models

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================
# Prometheus configuration
PROMETHEUS_URL=http://localhost:9090
PROMETHEUS_ENDPOINT=http://localhost:9090

# Grafana configuration
GRAFANA_ENDPOINT=http://localhost:3000
GRAFANA_URL=http://localhost:3000

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
LOG_PATH=/var/log/smartcloudops
LOG_LEVEL=INFO
TEMP_DIR=/tmp

# =============================================================================
# DOMAIN CONFIGURATION
# =============================================================================
# Production domains (replace with your actual domains)
PROMETHEUS_DOMAIN=prometheus.smartcloudops.ai
GRAFANA_DOMAIN=grafana.smartcloudops.ai
DB_DOMAIN=db.smartcloudops.ai
API_DOMAIN=api.smartcloudops.ai

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
ALLOWED_ORIGINS=http://localhost:3000,https://yourdomain.com
CORS_ORIGINS=http://localhost:3000,https://yourdomain.com

# =============================================================================
# API KEYS (for testing - generate secure ones for production)
# =============================================================================
ADMIN_API_KEY=your-admin-api-key-here-make-it-long-and-secure
ML_API_KEY=your-ml-api-key-here-make-it-long-and-secure
READONLY_API_KEY=your-readonly-api-key-here-make-it-long-and-secure

# =============================================================================
# ML MODEL CONFIGURATION
# =============================================================================
ML_MODEL_CACHE_TTL=3600
ML_USE_REAL_DATA=true
ML_ANOMALY_THRESHOLD=0.8

# =============================================================================
# NOTIFICATION CONFIGURATION
# =============================================================================
# Email notifications
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password

# PagerDuty notifications
PAGERDUTY_SERVICE_KEY=your-pagerduty-service-key

# =============================================================================
# RATE LIMITING CONFIGURATION
# =============================================================================
RATE_LIMIT_PER_MINUTE=100
RATE_LIMIT_PER_HOUR=1000
RATE_LIMIT_PER_DAY=10000

# =============================================================================
# DEVELOPMENT/TESTING CONFIGURATION
# =============================================================================
# Set to true for development, false for production
DEBUG_MODE=false
TESTING_MODE=false

# Test database (for running tests)
TEST_DATABASE_URL=postgresql://test_user:test_password@localhost:5432/smartcloudops_test

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================
# Docker configuration
DOCKER_IMAGE_TAG=latest
DOCKER_REGISTRY=your-registry.com

# Kubernetes configuration
K8S_NAMESPACE=smartcloudops
K8S_CLUSTER_NAME=production-cluster

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# JWT configuration
JWT_SECRET_KEY=your-jwt-secret-key
JWT_ACCESS_TOKEN_EXPIRES=3600
JWT_REFRESH_TOKEN_EXPIRES=86400

# Password policy
MIN_PASSWORD_LENGTH=12
REQUIRE_SPECIAL_CHARS=true
REQUIRE_NUMBERS=true
REQUIRE_UPPERCASE=true

# Session configuration
SESSION_SECRET_KEY=your-session-secret-key
SESSION_TIMEOUT=3600

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================
BACKUP_ENABLED=true
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=smartcloudops-backups

# =============================================================================
# PERFORMANCE CONFIGURATION
# =============================================================================
# Worker processes
WORKER_PROCESSES=4
WORKER_THREADS=2

# Cache configuration
CACHE_TTL=300
CACHE_MAX_SIZE=1000

# Database connection pooling
DB_POOL_SIZE=10
DB_POOL_TIMEOUT=30

# =============================================================================
# FEATURE FLAGS
# =============================================================================
ENABLE_ML_PREDICTIONS=true
ENABLE_AUTO_REMEDIATION=true
ENABLE_SECURITY_AUDIT=true
ENABLE_METRICS_COLLECTION=true
ENABLE_BACKGROUND_TASKS=true

# =============================================================================
# EXTERNAL SERVICE INTEGRATIONS
# =============================================================================
# OpenAI configuration
OPENAI_API_KEY=your-openai-api-key

# GitHub configuration
GITHUB_TOKEN=your-github-token
GITHUB_WEBHOOK_SECRET=your-github-webhook-secret

# Slack configuration
SLACK_BOT_TOKEN=your-slack-bot-token
SLACK_SIGNING_SECRET=your-slack-signing-secret

# =============================================================================
# MONITORING AND ALERTING
# =============================================================================
# Health check configuration
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10

# Alerting thresholds
CPU_THRESHOLD=90
MEMORY_THRESHOLD=85
DISK_THRESHOLD=80
RESPONSE_TIME_THRESHOLD=5000

# =============================================================================
# DEVELOPMENT NOTES
# =============================================================================
# 1. Never commit actual secrets to version control
# 2. Use different values for development, staging, and production
# 3. Rotate secrets regularly
# 4. Use secure secret management in production (AWS Secrets Manager, etc.)
# 5. Validate all environment variables on application startup
# 6. Use strong, unique passwords and API keys
# 7. Enable HTTPS in production
# 8. Configure proper logging and monitoring
# 9. Set up automated backups
# 10. Implement proper error handling and graceful degradation
